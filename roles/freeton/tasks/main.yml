---
# Create ton group
- name: Create ton group
  group:
    name: "{{ ton_group }}"
    state: present

# Create ton user
- name: Create ton user
  user:
    shell: "/bin/bash"
    uid: 1090
    name: "{{ ton_user }}"
    group: "{{ ton_group }}"

# - name: Allow ton user sudo
#   lineinfile:
#     dest: /etc/sudoers
#     state: present
#     regexp: "^{{ ton_user }}"
#     line: "{{ ton_user }} ALL=(ALL) NOPASSWD: ALL"

# Create folder for logs
- name: Create folder for logs
  file:
    state: directory
    path: "{{log_path}}"
    owner: "{{ ton_user }}"
    group: "{{ ton_group }}"
    mode: "744"

# Add logrotate
- name: Create logrotate
  template:
    src: ton.logrotate.j2
    dest: /etc/logrotate.d/ton
    mode: "644"

- name: Create folder ton directory
  file:
    state: directory
    path: /etc/ton
    owner: "{{ ton_user }}"
    group: "{{ ton_group }}"
    mode: "700"

- name: Create folder for freeton db
  file:
    state: directory
    recurse: yes
    path: /var/ton-work/db
    owner: "{{ ton_user }}"
    group: "{{ ton_group }}"
    mode: "755"

- name: Create folder for ton configs
  file:
    state: directory
    path: /etc/ton/configs
    owner: "{{ ton_user }}"
    group: "{{ ton_group }}"
    mode: "755"

# Pull network global configs
- name: Pull network configs
  become_user: "{{ ton_user }}"
  get_url:
    url: "https://raw.githubusercontent.com/tonlabs/rustnet.ton.dev/main/configs/ton-global.config.json" # network hardcoded improve when we reach stale !!!!!
    dest: "/etc/ton/configs/ton-global.config.json"

# Pull network default configs
- name: Pull network configs
  become_user: "{{ ton_user }}"
  get_url:
    url: "https://raw.githubusercontent.com/tonlabs/ton-labs-node/master/configs/default_config.json" # network hardcoded improve when we reach stale !!!!!
    dest: "/etc/ton/configs/default_config.json"

# Pull smart contracts
- name: Pull ton-labs-contracts
  git:
    repo: "https://github.com/tonlabs/ton-labs-contracts.git"
    dest: "/etc/ton/ton-labs-contracts"

- name: Own tonuser
  file:
    path: "/etc/ton/ton-labs-contracts"
    recurse: yes
    owner: "{{ ton_user }}"
    group: "{{ ton_group }}"

- name: Download tonos-cli binary
  become: no
  get_url:
    url: "https://github.com/tonlabs/tonos-cli/archive/v0.2.0.tar.gz" # needs variable!!!!!!!!1
    dest: "/tmp/v0.2.0.tar.gz"

- name: Unarchive tonos-cli
  become: no
  unarchive:
    src: "/tmp/v0.2.0.tar.gz" # needs variable!!!!!!!!1
    dest: "/tmp"
    remote_src: yes

- name: Copy file with owner and permissions
  copy:
    src: "/tmp/tonos-cli-0.2.0/tonos-cli" # needs variable!!!!!!!!1
    dest: "/usr/local/sbin/tonos-cli"
    remote_src: yes
    owner: "{{ ton_user }}"
    group: "{{ ton_user }}"
    mode: "0755"

- include_tasks: docker.yml
# docker run -v /etc/ton/configs/:/home/ton/configs -v /var/ton-work/db/:/home/ton/node_db -e NETWORK_TYPE=rustnet.ton.dev -it a2de2e67af16 /bin/bash
